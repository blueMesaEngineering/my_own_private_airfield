{"ast":null,"code":"var _jsxFileName = \"/home/deadpool/PROJECTS/BLUEMESAENGINEERING/2019/9 SEPTEMBER/20190913 FRIDAY/my_own_private_airfield/src/components/Home.js\";\nimport React from \"react\";\nimport { XYPlot, VerticalGridLines, HorizontalGridLines, ArcSeries, XAxis, YAxis, LineSeries, MarkSeries } from \"react-vis\";\nimport Piechart from \"./componentChart\";\nconst styles = {\n  titleText: {\n    fontSize: 40,\n    fontFamily: \"Verdana,sans-serif\"\n  }\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datapoints: []\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  renderDatapoints() {\n    const datapoints = this.state.datapoints;\n    var Piecharts = new Piechart();\n    const myData = [{\n      angle0: 0,\n      angle: 3.1415926 / 4,\n      opacity: 0.2,\n      radius: 10,\n      radius0: 60\n    }, {\n      angle0: 3.1415926 / 4,\n      angle: 2 * 3.1415926 / 4,\n      opacity: 0.4,\n      radius: 30,\n      radius0: 50\n    }, {\n      angle0: 2 * 3.1415926 / 4,\n      angle: 3 * 3.1415926 / 4,\n      opacity: 0.6,\n      radius: 20,\n      radius0: 75\n    }, {\n      angle0: 3 * 3.1415926 / 4,\n      angle: 4 * 3.1415926 / 4,\n      opacity: 0.8,\n      radius: 10,\n      radius0: 30\n    }, {\n      angle0: 4 * 3.1415926 / 4,\n      angle: 5 * 3.1415926 / 4,\n      opacity: 1,\n      radius: 10,\n      radius0: 20\n    }, {\n      angle0: 0,\n      angle: 5 * 3.1415926 / 4,\n      radius: 0,\n      radius0: 5\n    }];\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      height: 225,\n      width: 225,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(LineSeries, {\n      data: datapoints,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(XYPlot, {\n      height: 225,\n      width: 225,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(MarkSeries, {\n      data: datapoints,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(XYPlot, {\n      xDomain: [-5, 5],\n      yDomain: [-5, 5],\n      width: 225,\n      height: 225,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(ArcSeries, {\n      animation: true,\n      radiusType: \"literal\",\n      center: {\n        x: 0,\n        y: 0\n      },\n      data: myData,\n      colorType: \"literal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      role: \"main\",\n      class: \"flex-shrink-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"React with React-Vis\"), this.renderDatapoints(), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Test of React-JS with React-vis Data to boot.\")))));\n  }\n\n}\n\nexport default Home; // import React, { Math, Component } from \"react\";\n// import { Nav, Navbar, NavDropdown } from \"react-bootstrap/Navbar\";\n// import \"./App.css\";\n// import \"../node_modules/react-vis/dist/style.css\";\n// import {\n//   XYPlot,\n//   VerticalGridLines,\n//   HorizontalGridLines,\n//   ArcSeries,\n//   XAxis,\n//   YAxis,\n//   LineSeries,\n//   MarkSeries\n// } from \"react-vis\";\n// import Piechart from \"./componentPiechart\";\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       datapoints: []\n//     };\n//   }\n//   componentDidMount() {\n//     fetch(\n//       \"https://ec2-18-225-7-171.us-east-2.compute.amazonaws.com/api/datapoints/\"\n//     )\n//       .then(response => response.json())\n//       .then(json => this.setState({ datapoints: json }))\n//       .catch(error => console.log(error));\n//   }\n// renderDatapoints() {\n//   const { datapoints } = this.state;\n//   var Piecharts = new Piechart();\n//   const myData = [\n//     {\n//       angle0: 0,\n//       angle: 3.1415926 / 4,\n//       opacity: 0.2,\n//       radius: 10,\n//       radius0: 60\n//     },\n//     {\n//       angle0: 3.1415926 / 4,\n//       angle: (2 * 3.1415926) / 4,\n//       opacity: 0.4,\n//       radius: 30,\n//       radius0: 50\n//     },\n//     {\n//       angle0: (2 * 3.1415926) / 4,\n//       angle: (3 * 3.1415926) / 4,\n//       opacity: 0.6,\n//       radius: 20,\n//       radius0: 75\n//     },\n//     {\n//       angle0: (3 * 3.1415926) / 4,\n//       angle: (4 * 3.1415926) / 4,\n//       opacity: 0.8,\n//       radius: 10,\n//       radius0: 30\n//     },\n//     {\n//       angle0: (4 * 3.1415926) / 4,\n//       angle: (5 * 3.1415926) / 4,\n//       opacity: 1,\n//       radius: 10,\n//       radius0: 20\n//     },\n//     { angle0: 0, angle: (5 * 3.1415926) / 4, radius: 0, radius0: 5 }\n//   ];\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n//       <XYPlot height={225} width={225}>\n//         <LineSeries data={datapoints} />\n//       </XYPlot>\n//       <XYPlot height={225} width={225}>\n//         <VerticalGridLines />\n//         <HorizontalGridLines />\n//         <MarkSeries data={datapoints} />\n//       </XYPlot>\n//       {/* {Piecharts.renderPiecharts()} */}\n//       <XYPlot xDomain={[-5, 5]} yDomain={[-5, 5]} width={225} height={225}>\n//         <ArcSeries\n//           animation\n//           radiusType={\"literal\"}\n//           center={{ x: 0, y: 0 }}\n//           data={myData}\n//           colorType={\"literal\"}\n//         />\n//         <XAxis />\n//         <YAxis />\n//       </XYPlot>\n//     </div>\n//   );\n// }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n//           {this.renderHeader()}\n//           <center>\n//             <main role=\"main\" class=\"flex-shrink-0\">\n//               <h1 class=\"mt-5\">React with React-Vis</h1>\n//               {this.renderDatapoints()}\n//               <p className=\"lead\">\n//                 Test of React-JS with React-vis Data to boot.\n//               </p>\n//             </main>\n//           </center>\n//           {this.renderFooter()}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/home/deadpool/PROJECTS/BLUEMESAENGINEERING/2019/9 SEPTEMBER/20190913 FRIDAY/my_own_private_airfield/src/components/Home.js"],"names":["React","XYPlot","VerticalGridLines","HorizontalGridLines","ArcSeries","XAxis","YAxis","LineSeries","MarkSeries","Piechart","styles","titleText","fontSize","fontFamily","Home","Component","constructor","props","state","datapoints","componentDidMount","window","scrollTo","renderDatapoints","Piecharts","myData","angle0","angle","opacity","radius","radius0","display","justifyContent","x","y","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,UAPF,EAQEC,UARF,QASO,WATP;AAUA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE;AAFH;AADE,CAAf;;AAOA,MAAMC,IAAN,SAAmBd,KAAK,CAACe,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;AAEDC,EAAAA,gBAAgB,GAAG;AAAA,UACTJ,UADS,GACM,KAAKD,KADX,CACTC,UADS;AAEjB,QAAIK,SAAS,GAAG,IAAIf,QAAJ,EAAhB;AAEA,UAAMgB,MAAM,GAAG,CACb;AACEC,MAAAA,MAAM,EAAE,CADV;AAEEC,MAAAA,KAAK,EAAE,YAAY,CAFrB;AAGEC,MAAAA,OAAO,EAAE,GAHX;AAIEC,MAAAA,MAAM,EAAE,EAJV;AAKEC,MAAAA,OAAO,EAAE;AALX,KADa,EAQb;AACEJ,MAAAA,MAAM,EAAE,YAAY,CADtB;AAEEC,MAAAA,KAAK,EAAG,IAAI,SAAL,GAAkB,CAF3B;AAGEC,MAAAA,OAAO,EAAE,GAHX;AAIEC,MAAAA,MAAM,EAAE,EAJV;AAKEC,MAAAA,OAAO,EAAE;AALX,KARa,EAeb;AACEJ,MAAAA,MAAM,EAAG,IAAI,SAAL,GAAkB,CAD5B;AAEEC,MAAAA,KAAK,EAAG,IAAI,SAAL,GAAkB,CAF3B;AAGEC,MAAAA,OAAO,EAAE,GAHX;AAIEC,MAAAA,MAAM,EAAE,EAJV;AAKEC,MAAAA,OAAO,EAAE;AALX,KAfa,EAsBb;AACEJ,MAAAA,MAAM,EAAG,IAAI,SAAL,GAAkB,CAD5B;AAEEC,MAAAA,KAAK,EAAG,IAAI,SAAL,GAAkB,CAF3B;AAGEC,MAAAA,OAAO,EAAE,GAHX;AAIEC,MAAAA,MAAM,EAAE,EAJV;AAKEC,MAAAA,OAAO,EAAE;AALX,KAtBa,EA6Bb;AACEJ,MAAAA,MAAM,EAAG,IAAI,SAAL,GAAkB,CAD5B;AAEEC,MAAAA,KAAK,EAAG,IAAI,SAAL,GAAkB,CAF3B;AAGEC,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,MAAM,EAAE,EAJV;AAKEC,MAAAA,OAAO,EAAE;AALX,KA7Ba,EAoCb;AAAEJ,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAG,IAAI,SAAL,GAAkB,CAAtC;AAAyCE,MAAAA,MAAM,EAAE,CAAjD;AAAoDC,MAAAA,OAAO,EAAE;AAA7D,KApCa,CAAf;AAuCA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,GAAhB;AAAqB,MAAA,KAAK,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEb,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,GAAhB;AAAqB,MAAA,KAAK,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAJF,EAUE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAAjB;AAA0B,MAAA,OAAO,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAAnC;AAA4C,MAAA,KAAK,EAAE,GAAnD;AAAwD,MAAA,MAAM,EAAE,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,UAAU,EAAE,SAFd;AAGE,MAAA,MAAM,EAAE;AAAEc,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAHV;AAIE,MAAA,IAAI,EAAET,MAJR;AAKE,MAAA,SAAS,EAAE,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAVF,CADF;AAwBD;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEG,KAAKZ,gBAAL,EAFH,EAGE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAHF,CADF,CADF,CADF,CADF;AAeD;;AAlGgC;;AAqGnC,eAAeT,IAAfsourcesContent":["import React from \"react\";\nimport {\n  XYPlot,\n  VerticalGridLines,\n  HorizontalGridLines,\n  ArcSeries,\n  XAxis,\n  YAxis,\n  LineSeries,\n  MarkSeries\n} from \"react-vis\";\nimport Piechart from \"./componentChart\";\n\nconst styles = {\n  titleText: {\n    fontSize: 40,\n    fontFamily: \"Verdana,sans-serif\"\n  }\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      datapoints: []\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  renderDatapoints() {\n    const { datapoints } = this.state;\n    var Piecharts = new Piechart();\n\n    const myData = [\n      {\n        angle0: 0,\n        angle: 3.1415926 / 4,\n        opacity: 0.2,\n        radius: 10,\n        radius0: 60\n      },\n      {\n        angle0: 3.1415926 / 4,\n        angle: (2 * 3.1415926) / 4,\n        opacity: 0.4,\n        radius: 30,\n        radius0: 50\n      },\n      {\n        angle0: (2 * 3.1415926) / 4,\n        angle: (3 * 3.1415926) / 4,\n        opacity: 0.6,\n        radius: 20,\n        radius0: 75\n      },\n      {\n        angle0: (3 * 3.1415926) / 4,\n        angle: (4 * 3.1415926) / 4,\n        opacity: 0.8,\n        radius: 10,\n        radius0: 30\n      },\n      {\n        angle0: (4 * 3.1415926) / 4,\n        angle: (5 * 3.1415926) / 4,\n        opacity: 1,\n        radius: 10,\n        radius0: 20\n      },\n      { angle0: 0, angle: (5 * 3.1415926) / 4, radius: 0, radius0: 5 }\n    ];\n\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <XYPlot height={225} width={225}>\n          <LineSeries data={datapoints} />\n        </XYPlot>\n        <XYPlot height={225} width={225}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <MarkSeries data={datapoints} />\n        </XYPlot>\n        {/* {Piecharts.renderPiecharts()} */}\n        <XYPlot xDomain={[-5, 5]} yDomain={[-5, 5]} width={225} height={225}>\n          <ArcSeries\n            animation\n            radiusType={\"literal\"}\n            center={{ x: 0, y: 0 }}\n            data={myData}\n            colorType={\"literal\"}\n          />\n          <XAxis />\n          <YAxis />\n        </XYPlot>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div>          \n          <center>\n            <main role=\"main\" class=\"flex-shrink-0\">\n              <h1 class=\"mt-5\">React with React-Vis</h1>\n              {this.renderDatapoints()}\n              <p className=\"lead\">\n                Test of React-JS with React-vis Data to boot.\n              </p>\n            </main>\n          </center>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\n// import React, { Math, Component } from \"react\";\n// import { Nav, Navbar, NavDropdown } from \"react-bootstrap/Navbar\";\n// import \"./App.css\";\n// import \"../node_modules/react-vis/dist/style.css\";\n// import {\n//   XYPlot,\n//   VerticalGridLines,\n//   HorizontalGridLines,\n//   ArcSeries,\n//   XAxis,\n//   YAxis,\n//   LineSeries,\n//   MarkSeries\n// } from \"react-vis\";\n// import Piechart from \"./componentPiechart\";\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       datapoints: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\n//       \"https://ec2-18-225-7-171.us-east-2.compute.amazonaws.com/api/datapoints/\"\n//     )\n//       .then(response => response.json())\n//       .then(json => this.setState({ datapoints: json }))\n//       .catch(error => console.log(error));\n//   }\n\n  // renderDatapoints() {\n  //   const { datapoints } = this.state;\n  //   var Piecharts = new Piechart();\n\n  //   const myData = [\n  //     {\n  //       angle0: 0,\n  //       angle: 3.1415926 / 4,\n  //       opacity: 0.2,\n  //       radius: 10,\n  //       radius0: 60\n  //     },\n  //     {\n  //       angle0: 3.1415926 / 4,\n  //       angle: (2 * 3.1415926) / 4,\n  //       opacity: 0.4,\n  //       radius: 30,\n  //       radius0: 50\n  //     },\n  //     {\n  //       angle0: (2 * 3.1415926) / 4,\n  //       angle: (3 * 3.1415926) / 4,\n  //       opacity: 0.6,\n  //       radius: 20,\n  //       radius0: 75\n  //     },\n  //     {\n  //       angle0: (3 * 3.1415926) / 4,\n  //       angle: (4 * 3.1415926) / 4,\n  //       opacity: 0.8,\n  //       radius: 10,\n  //       radius0: 30\n  //     },\n  //     {\n  //       angle0: (4 * 3.1415926) / 4,\n  //       angle: (5 * 3.1415926) / 4,\n  //       opacity: 1,\n  //       radius: 10,\n  //       radius0: 20\n  //     },\n  //     { angle0: 0, angle: (5 * 3.1415926) / 4, radius: 0, radius0: 5 }\n  //   ];\n\n  //   return (\n  //     <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  //       <XYPlot height={225} width={225}>\n  //         <LineSeries data={datapoints} />\n  //       </XYPlot>\n  //       <XYPlot height={225} width={225}>\n  //         <VerticalGridLines />\n  //         <HorizontalGridLines />\n  //         <MarkSeries data={datapoints} />\n  //       </XYPlot>\n  //       {/* {Piecharts.renderPiecharts()} */}\n  //       <XYPlot xDomain={[-5, 5]} yDomain={[-5, 5]} width={225} height={225}>\n  //         <ArcSeries\n  //           animation\n  //           radiusType={\"literal\"}\n  //           center={{ x: 0, y: 0 }}\n  //           data={myData}\n  //           colorType={\"literal\"}\n  //         />\n  //         <XAxis />\n  //         <YAxis />\n  //       </XYPlot>\n  //     </div>\n  //   );\n  // }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n//           {this.renderHeader()}\n//           <center>\n//             <main role=\"main\" class=\"flex-shrink-0\">\n//               <h1 class=\"mt-5\">React with React-Vis</h1>\n//               {this.renderDatapoints()}\n//               <p className=\"lead\">\n//                 Test of React-JS with React-vis Data to boot.\n//               </p>\n//             </main>\n//           </center>\n//           {this.renderFooter()}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}